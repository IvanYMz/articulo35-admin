---
import Layout from "../../layouts/Layout.astro";
import type { StudentDetails } from "../../types/types";

// Extract the `id` parameter from the Astro route (selected student)
const { id } = Astro.params;

// Initialize a default student object with empty values
let student: StudentDetails = {
    personalData: {
        student_id: 0,
        full_name: "",
        email: "",
    },
    academicRecords: {
        student_code: "",
        career: "",
        average_score: 0,
        enrollment_cycle: "",
        graduation_cycle: "",
        approved_credits: 0,
        pending_credits: 0,
        division: "",
    },
    requests: [],
};

// Fetch student details from the API
try {
    const response = await fetch(`http://localhost:4321/api/students_info/details/${id}`);

    if (!response.ok) {
        console.error("Error fetching student information");
    } else {
        // Parse the response as JSON and cast it to the `StudentDetails` type
        student = (await response.json()) as StudentDetails;
    }
} catch (err) {
    console.error("Fetch error:", err);
}
---

<Layout>
    <h1>{student.personalData.full_name}</h1>

    {student.requests.length > 0 ? (
        <ul>
            {student.requests.map((request) => (
                <li>
                    {request.available_subjects.name}
                </li>
            ))}
        </ul>
    ) : (
        <p>No requests</p>
    )}

    <a href={`/students/transcription/${id}`}>Ver declaraci√≥n</a>
</Layout>