---
import Layout from "../../../layouts/Layout.astro";
import type { UrlResponse } from "../../../types/types";

const { id } = Astro.params;

let data: UrlResponse | null = null;

try {
    const response = await fetch(`http://localhost:4321/api/students_info/transcription/${id}`);

    if (!response.ok) {
        throw new Error(`Failed to fetch data: ${response.statusText}`);
    }

    data = (await response.json()) as UrlResponse;
} catch (error) {
    data = {
        audioUrl: "",
        transcriptionContent: "",
        error: (error as Error).message,
    };
}

---
<Layout
    title="Transcription"
    description="Transcription of student's audio file."
>
    {data?.error ? (
        <p style="color: red;">Error: {data.error}</p>
    ) : (
        <div>
            <h3>Student ID: {id}</h3>

            <h4>Audio</h4>
            {data?.audioUrl ? (
                <audio controls>
                    <source src={data.audioUrl} type="audio/mpeg" />
                    Your browser does not support the audio element.
                </audio>
            ) : (
                <div>
                    <p>No audio file found. Please upload an audio file.</p>
                    <input type="file" accept="audio/*" />
                </div>
            )}

            <h4>Transcription</h4>
            {data?.transcriptionContent ? (
                <textarea readonly>
                    {data.transcriptionContent}
                </textarea>
            ) : data?.audioUrl ? (
                <button>Transcribe Audio</button>
            ) : (
                <p>No transcription available. Upload an audio file first.</p>
            )}
        </div>
    )}
</Layout>
