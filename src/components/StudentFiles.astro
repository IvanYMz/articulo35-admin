---
import { API_ROUTES } from "../lib/apiRoutes";
import type { StudentFiles } from "../types/types";

const { id } = Astro.params;
let data: StudentFiles | null = null;
let dataError: string | null = null;

// Fetch student files
try {
    if(!id) {
        return;
    }
    const response = await fetch(
        API_ROUTES.STUDENT_FILES(id), // API endpoint to get student files
    );

    if (!response.ok) {
        throw new Error(`Error al obtener los archivos: ${response.status} - ${response.statusText}`);
    }

    try {
        data = (await response.json()) as StudentFiles; // Parse the response as JSON and cast it to 'StudentFiles' type
    } catch (jsonError) {
        throw new Error("Error al procesar la respuesta del servidor. Verifica el formato JSON.");
    }
} catch (error) {
    dataError = (error as Error).message;
    data = null;
}
---

<!-- Handle error -->
{dataError && (
    <div class="error-box">
        <p>{dataError}</p>
    </div>
)}

<div>
    <h2>Archivos</h2>
    {
        data && data.length > 0 ? (
            <ul>
                {data.map((file) => ( // Display the list of files
                    <li>
                        <button
                            class="openFileButton hover:shadow-lg hover:scale-105 cursor-pointer"
                            data-url={file.url}
                        >
                            <img src="/src/assets/FileTypePdf.svg" alt="Icono de archivo" />
                            <span>{file.name}</span>
                        </button>
                    </li>
                ))}
            </ul>
        ) : (
            !dataError && <p>No hay documentos disponibles.</p>
        )
    }
</div>

<style>
    ul {
        display: flex;
        padding-top: 0.5rem;
        gap: 1rem;
    }
    h2 {
        font-size: 1.25rem;
        font-weight: 600;
        padding-bottom: 0.5rem;
        margin-bottom: 0.5rem;
        color: #2d3c5a;
        border-bottom: 2px solid #2d3c5a;
    }
    div {
        background: white;
        padding: 1rem;
        border-radius: 0.5rem;
    }
    button {
        width: 7rem;
        height: 9rem;
        border-radius: 0.25rem;
        padding: 0.5rem;
        border: solid 0.5px #2d3c5a;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
    button span {
        width: 100%; 
        color: #2d3c5a;
        text-align: left;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        display: block;
    }
    button img {
        width: 75px;
        height: 75px;
    }

    .error-box {
        background: #ffe6e6;
        color: #d8000c;
        padding: 1rem;
        border-radius: 0.5rem;
        margin-bottom: 1rem;
        border: 1px solid #d8000c;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        document.querySelectorAll(".openFileButton").forEach((button) => {
            button.addEventListener("click", () => {
                const fileUrl = button.getAttribute("data-url");
                if (fileUrl) {
                    window.open(fileUrl, "_blank", "noopener,noreferrer");
                }
            });
        });
    });
</script>


