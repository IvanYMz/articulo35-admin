---
import refreshIcon from "../assets/RefreshIcon.svg";

const { id } = Astro.params;
---

<div id="buttons-container">
    <button id="accept" class="aprove-deny" data-id={id} data-status="accepted">
        Aprobar
    </button>
    <button id="deny" class="aprove-deny" data-id={id} data-status="rejected">
        Denegar
    </button>
    <button
        id="reset"
        data-id={id}
        data-status="under_review"
        title="En revisiÃ³n"
    >
        <img src={refreshIcon.src} alt="Refresh" />
    </button>
</div>

<style>
    #buttons-container {
        display: flex;
        gap: 0.75rem;
    }
    .aprove-deny {
        border-radius: 1rem;
        padding: 0.25rem 0.5rem;
        border: 1.5px solid;
    }
    #accept {
        background: #cee9e6;
        color: #0d9488;
        border-color: #0d9488;
    }
    #deny {
        background: pink;
        color: red;
        border-color: red;
    }
    button:hover {
        opacity: 0.5;
    }
</style>

<script>
    import { API_ROUTES } from "../lib/apiRoutes";
    // Get buttons
    const acceptButton = document.getElementById("accept");
    const denyButton = document.getElementById("deny");
    const resetButton = document.getElementById("reset");

    if (!acceptButton || !denyButton || !resetButton) {
        throw new Error("Buttons not found");
    }

    // Add event listeners (click) to the buttons
    acceptButton.addEventListener("click", () => {
        const studentId = acceptButton.dataset.id;
        const status = acceptButton.dataset.status;

        if (!studentId || !status) {
            throw new Error("ID or Status not found");
        }

        handleStatusChange(studentId, status);
    });

    denyButton.addEventListener("click", () => {
        const studentId = denyButton.dataset.id;
        const status = denyButton.dataset.status;

        if (!studentId || !status) {
            throw new Error("ID or Status not found");
        }

        handleStatusChange(studentId, status);
    });

    resetButton.addEventListener("click", () => {
        const studentId = resetButton.dataset.id;
        const status = resetButton.dataset.status;

        if (!studentId || !status) {
            throw new Error("ID or Status not found");
        }

        handleStatusChange(studentId, status);
    });

    // Change the status of the student request
    async function handleStatusChange(studentId: string, status: string) {
        try {
            const response = await fetch(
                API_ROUTES.STUDENT_REQUEST_STATUS, // API endpoint to update student requests
                {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        student_id: studentId,
                        requestStatus: status,
                    }),
                },
            );

            if (!response.ok) {
                console.error("Error updating student requests");
            } else {
                // Reload the page to reflect the changes
                window.location.href = "/";
            }
        } catch (err) {
            console.error("Fetch error:", err);
        }
    }
</script>
